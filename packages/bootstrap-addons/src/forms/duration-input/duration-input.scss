@import 'bootstrap/scss/functions';
@import 'bootstrap/scss/variables';
@import 'bootstrap/scss/maps';
@import 'bootstrap/scss/mixins';
@import 'bootstrap/scss/forms/form-control';

bs-duration-input {
  display: block;

  fieldset {
    position: relative;

    // Customize the `:focus` state to imitate native WebKit styles.
    &:focus-within {
      color: $input-focus-color;
      background-color: $input-focus-bg;
      border-color: $input-focus-border-color;
      outline: 0;

      @if $enable-shadows {
        @include box-shadow($input-box-shadow, $input-focus-box-shadow);
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $input-focus-box-shadow;
      }
    }
  }

  input[type='number'] {
    border: 0;
    min-inline-size: 2ch;
    appearance: textfield;
    outline: 0;
    text-align: right;
    field-sizing: content;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      appearance: none;
      margin: 0;
    }
  }

  input[required] {
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    bottom: 0;
    opacity: 0;
    pointer-events: none;
  }
}

.was-validated bs-duration-input {
  .form-control:invalid:focus-within,
  .form-control.is-invalid:focus-within {
    box-shadow: 0 0 0 0.25rem rgb(220 53 69 / 25%);
  }

  .form-control:valid:focus-within,
  .form-control.is-valid:focus-within {
    box-shadow: 0 0 0 0.25rem rgb(25 135 84 / 25%);
  }
}

@supports not (field-sizing: content) {
  bs-duration-input {
    input[type='number'] {
      inline-size: 3ch;
    }
  }
}
